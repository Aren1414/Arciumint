name: Deploy Anchor Program

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust 1.70+
      run: |
        rustup toolchain install 1.70.0
        rustup default 1.70.0
        rustc --version
        cargo --version

    - name: Install Solana CLI
      run: |
        curl -sL https://github.com/solana-labs/solana/releases/download/v1.18.2/solana-release-x86_64-unknown-linux-gnu.tar.bz2 -o solana.tar.bz2
        tar -xjf solana.tar.bz2
        echo "$PWD/solana-release/bin" >> $GITHUB_PATH
        export PATH="$PWD/solana-release/bin:$PATH"
        solana --version

    - name: Install Anchor
      run: |
        cargo install --git https://github.com/coral-xyz/anchor anchor-cli --locked
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        export PATH="$HOME/.cargo/bin:$PATH"
        anchor --version

    - name: Restore wallet keypair
      run: |
        echo "${{ secrets.WALLET_KEY }}" > wallet.json
        solana config set --keypair wallet.json
        solana config set --url https://api.devnet.solana.com

    - name: Restore program keypair
      run: |
        mkdir -p target/deploy
        echo '${{ secrets.PROGRAM_KEYPAIR }}' > target/deploy/arciumintnftgen-keypair.json

    - name: Airdrop SOL to wallet
      run: solana airdrop 0.2 || echo "Airdrop failed, continuing anyway"

    - name: Update and clean dependencies
      run: |
        cargo update -p anchor-spl
        cargo update -p anchor-lang
        cargo update -p anchor-attribute-program
        cargo update -p anchor-derive-accounts
        cargo clean
      working-directory: programs/arciumint-nft-gen

    - name: Build program with Anchor
      run: anchor build
      working-directory: programs/arciumint-nft-gen

    - name: Deploy program to devnet
      run: anchor deploy --provider.cluster devnet --provider.wallet wallet.json
      working-directory: programs/arciumint-nft-gen
