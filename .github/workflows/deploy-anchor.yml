name: Deploy Anchor Program

on:
  push:
    branches: [main]

env:
  RUSTUP_TOOLCHAIN: 1.89.0

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev pkg-config build-essential libssl-dev

    - name: Install Rust toolchain and cargo in PATH
      run: |
        export CARGO_HOME="$HOME/.cargo"
        rustup self update
        rustup install $RUSTUP_TOOLCHAIN
        rustup default $RUSTUP_TOOLCHAIN
        rustc --version
        cargo --version
        echo "$CARGO_HOME/bin" >> $GITHUB_PATH

    - name: Install Solana CLI (Anza)
      run: |
        sh -c "$(curl -sSfL https://release.anza.xyz/v2.1.0/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        "$HOME/.local/share/solana/install/active_release/bin/solana" --version

    - name: Install Anchor CLI (avm)
      run: |
        cargo install --git https://github.com/coral-xyz/anchor avm --locked --force || true
        avm install 0.31.1 || true
        avm use 0.31.1 || true
        echo "$HOME/.avm/bin" >> $GITHUB_PATH
        export PATH="$HOME/.avm/bin:$PATH"
        anchor --version

    - name: (Optional) Install Arcium CLI
      run: |
        curl --proto '=https' --tlsv1.2 -sSfL https://arcium-install.arcium.workers.dev/ | bash
        arcup install || true

    - name: Restore wallet keypair and set Solana config
      run: |
        echo '${{ secrets.WALLET_KEY }}' > wallet.json
        chmod 600 wallet.json
        solana config set --keypair wallet.json
        solana config set --url https://api.devnet.solana.com
        solana config get

    - name: Restore program keypair
      run: |
        mkdir -p target/deploy
        echo '${{ secrets.PROGRAM_KEYPAIR }}' > target/deploy/arciumintnftgen-keypair.json
        chmod 600 target/deploy/arciumintnftgen-keypair.json
        solana address -k target/deploy/arciumintnftgen-keypair.json || true

    - name: Airdrop SOL (devnet)
      run: |
        solana airdrop 2 -k wallet.json || echo "Airdrop failed or not necessary"

    - name: Confirm Program ID consistency
      run: |
        grep "declare_id!" programs/arciumint-nft-gen/src/lib.rs || true
        grep "arciumintnftgen" Anchor.toml || true
        solana address -k target/deploy/arciumintnftgen-keypair.json || true

    - name: Clean Anchor build
      run: anchor clean || true

    - name: Build Anchor program
      run: |
        ANCHOR_LOG=true anchor build --skip-lint -- --features exclude-accounts,idl-build

    - name: Generate IDL with full account context
      run: |
        ANCHOR_LOG=true anchor idl build -- --no-default-features

    - name: Check IDL file exists and copy to client
      run: |
        if [ ! -f target/idl/arciumintnftgen.json ]; then
          echo "❌ IDL file not found!"
          ls -la target/idl || true
          exit 1
        fi
        mkdir -p client/idl
        cp target/idl/arciumintnftgen.json client/idl/arciumintnftgen.json

    - name: Commit and push IDL to repo
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}
        git add -f client/idl/arciumintnftgen.json
        if git diff --cached --quiet; then
          echo "✅ No IDL changes to commit"
        else
          git commit -m "Add/Update IDL file for frontend build"
          git push origin main
        fi

    - name: Check .so file exists
      run: |
        if [ ! -f target/deploy/arciumintnftgen.so ]; then
          echo "❌ .so file not found!"
          ls -la target/deploy || true
          exit 1
        fi

    - name: Refresh cluster state
      run: |
        solana config set --url https://api.devnet.solana.com
        echo "block-height:" $(solana block-height)
        echo "slot:" $(solana slot)
        echo "balance:" $(solana balance)
        sleep 5

    - name: Deploy Anchor program
      run: |
        anchor deploy --provider.cluster devnet --provider.wallet wallet.json
