name: Deploy Anchor Program

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust nightly (compatible with solana-program v2.1.0)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2024-06-15
        override: true
        components: rust-src

    - name: Install Solana CLI v1.18.2
      run: |
        curl -sL https://github.com/solana-labs/solana/releases/download/v1.18.2/solana-release-x86_64-unknown-linux-gnu.tar.bz2 -o solana.tar.bz2
        tar -xjf solana.tar.bz2
        echo "$PWD/solana-release/bin" >> $GITHUB_PATH
        export PATH="$PWD/solana-release/bin:$PATH"
        solana --version

    - name: Install Anchor CLI
      run: |
        cargo install --git https://github.com/coral-xyz/anchor anchor-cli --locked
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        export PATH="$HOME/.cargo/bin:$PATH"
        anchor --version

    - name: Restore wallet keypair
      run: |
        echo "${{ secrets.WALLET_KEY }}" > wallet.json
        solana config set --keypair wallet.json
        solana config set --url https://api.devnet.solana.com

    - name: Restore program keypair
      run: |
        mkdir -p programs/arciumint-nft-gen/target/deploy
        echo '${{ secrets.PROGRAM_KEYPAIR }}' > programs/arciumint-nft-gen/target/deploy/arciumintnftgen-keypair.json

    - name: Airdrop SOL to wallet
      run: solana airdrop 0.2 || echo "Airdrop failed, continuing anyway"

    - name: Debug file structure
      run: |
        echo "Listing project files:"
        ls -la programs/arciumint-nft-gen
        echo "Listing deploy folder:"
        ls -la programs/arciumint-nft-gen/target/deploy

    - name: Update and clean dependencies
      run: |
        cargo update -p anchor-spl || true
        cargo update -p anchor-lang || true
        cargo update -p anchor-attribute-program || true
        cargo update -p anchor-derive-accounts || true
        cargo clean
      working-directory: programs/arciumint-nft-gen

    - name: Sync Cargo.lock
      run: cargo update -Znext-lockfile-bump
      working-directory: programs/arciumint-nft-gen

    - name: Build program with Anchor
      run: |
        cd programs/arciumint-nft-gen
        cargo update
        cd ../..
        anchor build --skip-lint

    - name: Deploy program to devnet
      run: anchor deploy --provider.cluster devnet --provider.wallet wallet.json
      working-directory: programs/arciumint-nft-gen
