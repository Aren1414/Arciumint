name: Deploy Anchor Program

on:
  push:
    branches: [main]

env:
  RUSTUP_TOOLCHAIN: 1.89.0

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev pkg-config

    - name: Install Rust
      run: |
        rustup self update
        rustup install ${{ env.RUSTUP_TOOLCHAIN }}
        rustup default ${{ env.RUSTUP_TOOLCHAIN }}
        rustc --version
        cargo --version

    - name: Install Solana CLI via Anza
      run: |
        sh -c "$(curl -sSfL https://release.anza.xyz/v2.1.0/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        solana --version

    - name: Install Anchor CLI
      run: |
        cargo install --git https://github.com/coral-xyz/anchor avm --locked --force || true
        avm install 0.31.1 || true
        avm use 0.31.1 || true
        echo "$HOME/.avm/bin" >> $GITHUB_PATH
        export PATH="$HOME/.avm/bin:$PATH"
        anchor --version

    - name: Restore wallet keypair
      run: |
        echo '${{ secrets.WALLET_KEY }}' > wallet.json
        solana config set --keypair wallet.json
        solana config set --url https://api.devnet.solana.com

    - name: Restore program keypair
      run: |
        mkdir -p target/deploy
        echo '${{ secrets.PROGRAM_KEYPAIR }}' > target/deploy/arciumintnftgen-keypair.json

    - name: Airdrop SOL
      run: solana airdrop 1 -k wallet.json || echo "Airdrop failed"

    - name: Confirm Program ID consistency
      run: |
        grep "declare_id!" programs/arciumint-nft-gen/src/lib.rs || true
        grep "arciumintnftgen" Anchor.toml || true
        solana address -k target/deploy/arciumintnftgen-keypair.json || true

    - name: Clean Anchor build
      run: anchor clean

    - name: Build Anchor program with IDL features
      run: |
        ANCHOR_LOG=true anchor build --skip-lint -- --features exclude-accounts,idl-build

    - name: Copy IDL to client
      run: |
        mkdir -p client/idl
        cp target/idl/arciumintnftgen.json client/idl/arciumintnftgen.json

    - name: Commit and push IDL to repo
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git remote set-url origin https://x-access-token:${GH_PAT}@github.com/Aren1414/Arciumint.git
        git add client/idl/arciumintnftgen.json
        git commit -m "Add IDL file for frontend build"
        git push origin main

    - name: Check .so file exists
      run: |
        if [ ! -f target/deploy/arciumintnftgen.so ]; then
          echo "‚ùå .so file not found!"
          exit 1
        fi

    - name: Deploy Anchor program
      run: |
        anchor deploy --provider.cluster devnet --provider.wallet wallet.json
