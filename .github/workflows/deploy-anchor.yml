name: Deploy Anchor + Arcium Program

on:
  push:
    branches: [main]

env:
  RUSTUP_TOOLCHAIN: 1.69.0
  CARGO_HOME: $HOME/.cargo
  PATH: $HOME/.cargo/bin:$PATH

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git tar curl libudev-dev pkg-config build-essential libssl-dev dos2unix cmake

    - name: Install Rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        rustup install $RUSTUP_TOOLCHAIN
        rustup default $RUSTUP_TOOLCHAIN

    - name: Install Solana CLI (Anza)
      run: |
        curl -sSfL https://release.anza.xyz/v2.1.0/install | bash
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

    - name: Install Anchor CLI
      run: |
        cargo install anchor-cli --version 0.31.1 --locked

    - name: Install Arcium CLI and Arcup
      run: |
        curl --proto '=https' --tlsv1.2 -sSfL https://arcium-install.arcium.workers.dev/ | bash
        arcup install || true

    - name: Restore wallet keypair and set Solana config
      run: |
        echo '${{ secrets.WALLET_KEY }}' > wallet.json
        chmod 600 wallet.json
        solana config set --keypair wallet.json
        solana config set --url https://api.devnet.solana.com

    - name: Restore program keypair
      run: |
        mkdir -p target/deploy
        echo '${{ secrets.PROGRAM_KEYPAIR }}' > target/deploy/arciumintnftgen-keypair.json
        chmod 600 target/deploy/arciumintnftgen-keypair.json

    - name: Airdrop SOL (devnet)
      run: |
        solana airdrop 2 -k wallet.json || echo "Airdrop failed or not necessary"

    - name: Clean Anchor build
      run: anchor clean || true

    - name: Normalize Rust source files
      run: |
        find programs/arciumint-nft-gen/src -type f -name "*.rs" -exec dos2unix {} \;

    - name: Build Anchor program
      run: |
        ANCHOR_LOG=true anchor build --features exclude-accounts,idl-build

    - name: Generate IDL
      run: |
        ANCHOR_LOG=true anchor idl build --features exclude-accounts,idl-build

    - name: Copy IDL to client
      run: |
        mkdir -p client/idl
        cp target/idl/arciumintnftgen.json client/idl/arciumintnftgen.json

    - name: Deploy Anchor program
      run: |
        anchor deploy --provider.cluster devnet --provider.wallet wallet.json
