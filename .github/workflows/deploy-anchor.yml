name: Deploy Anchor Program

on:
  push:
    branches: [main]

env:
  RUSTUP_TOOLCHAIN: 1.89.0

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev pkg-config

    - name: Install Rust
      run: |
        rustup self update
        rustup install ${{ env.RUSTUP_TOOLCHAIN }}
        rustup default ${{ env.RUSTUP_TOOLCHAIN }}
        rustc --version
        cargo --version

    - name: Install Solana CLI via Anza
      run: |
        sh -c "$(curl -sSfL https://release.anza.xyz/v2.1.0/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        solana --version

    - name: Install Anchor CLI
      run: |
        cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
        avm install 0.31.1
        avm use 0.31.1
        echo "$HOME/.avm/bin" >> $GITHUB_PATH
        anchor --version

    - name: Restore wallet keypair
      run: |
        echo '${{ secrets.WALLET_KEY }}' > $GITHUB_WORKSPACE/wallet.json
        solana config set --keypair $GITHUB_WORKSPACE/wallet.json
        solana config set --url https://api.devnet.solana.com

    - name: Restore program keypair
      run: |
        mkdir -p $GITHUB_WORKSPACE/target/deploy
        echo '${{ secrets.PROGRAM_KEYPAIR }}' > $GITHUB_WORKSPACE/target/deploy/arciumintnftgen-keypair.json

    - name: Airdrop SOL
      run: solana airdrop 2 -k $GITHUB_WORKSPACE/wallet.json || echo "Airdrop failed"

    - name: Confirm Program ID consistency
      run: |
        grep "declare_id!" programs/arciumint-nft-gen/src/lib.rs
        grep "arciumintnftgen" Anchor.toml
        solana address -k $GITHUB_WORKSPACE/target/deploy/arciumintnftgen-keypair.json

    - name: Build Anchor program
      run: |
        anchor build --skip-lint --workspace programs/arciumint-nft-gen
        find programs/arciumint-nft-gen/target/deploy -name "*.so" || echo "⚠️ No .so files found."

    - name: Check .so file exists
      run: |
        SO_PATH=$(find programs/arciumint-nft-gen/target/deploy -name "arciumintnftgen.so")
        if [ -z "$SO_PATH" ]; then
          echo "❌ .so file not found!"
          exit 1
        fi

    - name: Move .so file to root deploy folder
      run: |
        mkdir -p $GITHUB_WORKSPACE/target/deploy
        cp programs/arciumint-nft-gen/target/deploy/arciumintnftgen.so $GITHUB_WORKSPACE/target/deploy/arciumintnftgen.so

    - name: Deploy Anchor program
      run: |
        anchor deploy --provider.cluster devnet --provider.wallet $GITHUB_WORKSPACE/wallet.json --programs programs/arciumint-nft-gen
