name: Deploy usernftcreator Program

on:
  push:
    branches: [main]
    paths:
      - 'programs/usernftcreator/**'
      - 'Anchor.toml'

env:
  RUSTUP_TOOLCHAIN: 1.89.0

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev pkg-config

    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install Rust
      run: |
        rustup self update
        rustup install ${{ env.RUSTUP_TOOLCHAIN }}
        rustup default ${{ env.RUSTUP_TOOLCHAIN }}
        rustc --version
        cargo --version

    - name: Install Solana CLI (v2.1.0)
      run: |
        curl -sSfL https://release.anza.xyz/v2.1.0/install | sh
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        solana --version

    - name: Install Anchor CLI (v0.31.1)
      run: |
        cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
        avm install 0.31.1
        avm use 0.31.1
        echo "$HOME/.avm/bin" >> $GITHUB_PATH
        export PATH="$HOME/.avm/bin:$PATH"
        anchor --version

    - name: Restore wallet keypair (signer)
      run: |
        echo '${{ secrets.WALLET_KEY }}' > wallet.json
        solana config set --keypair wallet.json
        solana config set --url https://api.devnet.solana.com
        solana address -k wallet.json

    - name: Restore program keypair
      run: |
        mkdir -p target/deploy
        echo '${{ secrets.USERNFTCREATOR_KEYPAIR }}' > target/deploy/usernftcreator-keypair.json
        solana address -k target/deploy/usernftcreator-keypair.json

    - name: Confirm Program ID consistency
      run: |
        echo "🔍 Checking Program ID consistency..."
        echo "From lib.rs:"
        grep "declare_id!" programs/usernftcreator/src/lib.rs || echo "❌ lib.rs not found"
        echo "From Anchor.toml:"
        grep "usernftcreator" Anchor.toml || echo "❌ usernftcreator not found"
        echo "From keypair file:"
        solana address -k target/deploy/usernftcreator-keypair.json || echo "❌ keypair not found"

    - name: Build Anchor program
      run: |
        echo "🔧 Building usernftcreator program..."
        anchor build --program-name usernftcreator --skip-lint
        echo "📦 Build complete. Listing .so files:"
        find target/deploy -name "usernftcreator.so" || echo "⚠️ No .so file found."

    - name: Check .so file exists
      run: |
        if [ ! -f target/deploy/usernftcreator.so ]; then
          echo "❌ ERROR: .so file not found. Build may have failed."
          exit 1
        fi
        echo "✅ .so file found."

    - name: Deploy Anchor program to devnet
      run: |
        echo "🚀 Deploying usernftcreator to devnet..."
        anchor deploy --program-name usernftcreator --provider.cluster devnet --provider.wallet wallet.json
